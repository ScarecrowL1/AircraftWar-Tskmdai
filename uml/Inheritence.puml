@startuml
'https://plantuml.com/class-diagram

abstract class FlyingObject
{
    # int locationX
    # int locationY
    # int speedX
    # int speedY
    # BufferedImage image
    # int width
    # int height
    # boolean isValid

    + FlyingObject(int locationX, int locationY, int speedX, int speedY):void
    + forward():void
    + crash(FlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# int maxHp
    # int hp
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp):void
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<AbstractBullet>
 }

abstract class AbstractBullet
{
    - int power
    + AbstractBullet(int locationX, int locationY, int speedX, int speedY, int power):void
    + forward():void
	+ getPower():int
}
abstract class AbstractProp{
    +AbstractProp(int locationX, int locationY, int speedX, int speedY):void
    +forward():void
}
FlyingObject <|-- AbstractAircraft
FlyingObject <|-- AbstractBullet
FlyingObject <|-- AbstractProp

AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- Boss

AbstractBullet <|-- HeroBullet
AbstractBullet <|-- EnemyBullet

AbstractProp <|-- HpSupply
AbstractProp <|-- BombSupply
AbstractProp <|-- FireSupply



class HeroAircraft {
    - int shootNum
    - int power
    - int direction
    + HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp):void
    + forward():void
    + shoot():List<AbstractBullet>
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
    + forward():void
    + shoot():List<AbstractBullet>
}

class EliteEnemy{
    -shootNum
    -power
    -direction
    +EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
    +shoot():List<AbstractBullet>
    +forward()
}

class Boss{
    Boss(int locationX, int locationY, int speedX, int speedY, int hp):void
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power):void
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power):void
}

class HpSupply{
    + HpSupply(int locationX, int locationY, int speedX, int speedY):void
}

class BombSupply{
    + BombSupply(int locationX, int locationY, int speedX, int speedY):void
}

class FireSupply{
    + FireSupply(int locationX, int locationY, int speedX, int speedY):void
}

@enduml